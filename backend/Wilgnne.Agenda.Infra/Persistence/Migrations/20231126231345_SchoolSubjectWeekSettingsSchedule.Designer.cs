// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wilgnne.Agenda.Infra.DbContext.AgendaContext;

#nullable disable

namespace Wilgnne.Agenda.Infra.Persistence.Migrations
{
    [DbContext(typeof(AgendaContext))]
    [Migration("20231126231345_SchoolSubjectWeekSettingsSchedule")]
    partial class SchoolSubjectWeekSettingsSchedule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirebaseUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SchoolSubjects");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndEventDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolSubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartEventDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SchoolSubjectId");

                    b.ToTable("SchoolSubjectEvents");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.Property<Guid>("WeekSettingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WeekSettingId");

                    b.ToTable("SchoolSubjectSchedule");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectWeekSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("SchoolSubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SchoolSubjectId");

                    b.ToTable("SchoolSubjectWeekSetting");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubject", b =>
                {
                    b.HasOne("Wilgnne.Agenda.Domain.Entities.ApplicationUser", "User")
                        .WithMany("SchoolSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectEvent", b =>
                {
                    b.HasOne("Wilgnne.Agenda.Domain.Entities.SchoolSubject", "Subject")
                        .WithMany("SubjectEvents")
                        .HasForeignKey("SchoolSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectSchedule", b =>
                {
                    b.HasOne("Wilgnne.Agenda.Domain.Entities.SchoolSubjectWeekSetting", "WeekSetting")
                        .WithMany("SubjectSchedules")
                        .HasForeignKey("WeekSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeekSetting");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectWeekSetting", b =>
                {
                    b.HasOne("Wilgnne.Agenda.Domain.Entities.SchoolSubject", "SchoolSubject")
                        .WithMany("WeekSettings")
                        .HasForeignKey("SchoolSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolSubject");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("SchoolSubjects");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubject", b =>
                {
                    b.Navigation("SubjectEvents");

                    b.Navigation("WeekSettings");
                });

            modelBuilder.Entity("Wilgnne.Agenda.Domain.Entities.SchoolSubjectWeekSetting", b =>
                {
                    b.Navigation("SubjectSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
